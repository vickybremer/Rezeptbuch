{"ast":null,"code":"var _jsxFileName = \"/Users/bella/Documents/github/Rezeptbuch/rezeptbuch/src/components/randomizer/RandomizerButton.js\",\n    _s = $RefreshSig$();\n\nimport recipeData from \"../recipeData/Recipe-data.json\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RandomizerButton() {\n  _s();\n\n  //Mit Conditional Rendering prüfen, ob schon was in current Recipe steht\n  //evtl. mit Conditional Rendering prüfen, dass die gleichen Rezepte nicht hintereinander\n  //geshufflet werden können.\n  const [currentRecipe, setCurrentRecipe] = useState(\"\"); //useEffect\n\n  function Randomize() {\n    const random = Math.floor(Math.random() * recipeData.length);\n    const RandomRecipe = recipeData[random].title;\n    console.log(RandomRecipe);\n    setCurrentRecipe(RandomRecipe);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Randomize,\n      children: \" shuffle \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RandomizerButton, \"CT2NnFWyRR8wPjKYK7FEN3e9CNQ=\");\n\n_c = RandomizerButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomizerButton\");","map":{"version":3,"sources":["/Users/bella/Documents/github/Rezeptbuch/rezeptbuch/src/components/randomizer/RandomizerButton.js"],"names":["recipeData","useState","RandomizerButton","currentRecipe","setCurrentRecipe","Randomize","random","Math","floor","length","RandomRecipe","title","console","log"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,gCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC;AACA;AACA;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCH,QAAQ,CAAC,EAAD,CAAlD,CAJyC,CAMzC;;AAEA,WAASI,SAAT,GAAqB;AACnB,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBN,UAAU,CAACS,MAAtC,CAAf;AACA,UAAMC,YAAY,GAAGV,UAAU,CAACM,MAAD,CAAV,CAAmBK,KAAxC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AAEAN,IAAAA,gBAAgB,CAACM,YAAD,CAAhB;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,gBAAIP;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAtBuBH,gB;;KAAAA,gB","sourcesContent":["import recipeData from \"../recipeData/Recipe-data.json\";\nimport { useState } from \"react\";\n\nexport default function RandomizerButton() {\n  //Mit Conditional Rendering prüfen, ob schon was in current Recipe steht\n  //evtl. mit Conditional Rendering prüfen, dass die gleichen Rezepte nicht hintereinander\n  //geshufflet werden können.\n  const [currentRecipe, setCurrentRecipe] = useState(\"\");\n\n  //useEffect\n\n  function Randomize() {\n    const random = Math.floor(Math.random() * recipeData.length);\n    const RandomRecipe = recipeData[random].title;\n    console.log(RandomRecipe);\n\n    setCurrentRecipe(RandomRecipe);\n  }\n\n  return (\n    <div>\n      <p>{currentRecipe}</p>\n      <button onClick={Randomize}> shuffle </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}