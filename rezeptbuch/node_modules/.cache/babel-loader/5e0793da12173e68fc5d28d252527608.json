{"ast":null,"code":"var _jsxFileName = \"/Users/bella/Documents/github/Rezeptbuch/rezeptbuch/src/components/addNewRecipe/AddRecipe.js\",\n    _s = $RefreshSig$();\n\n// import Header from '../header/Header.js'\nimport React, { useState, useEffect } from \"react\";\nimport Dexie from \"dexie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  //set the database\n  const db = new Dexie(\"ReactDexie\"); //create the database store\n\n  db.version(1).stores({\n    posts: \"title, content, file\"\n  });\n  db.open().catch(err => {\n    console.log(err.stack || err);\n  }); //set the state and property\n\n  const [postTitle, setTitle] = useState(\"\");\n  const [postContent, setContent] = useState(\"\"); //   const [postFile, setFile] = useState(\"\");\n\n  const [posts, setPosts] = useState(\"\"); //read the file and decode it\n  //   const getFile = e => {\n  //     console.log(e);\n  //     let reader = new FileReader();\n  //     reader.readAsDataURL(e[0]);\n  //     reader.onload = e => {\n  //       setFile(reader.result);\n  //     };\n  //   };\n\n  const deletePost = async id => {\n    console.log(id);\n    db.posts.delete(id);\n    let allPosts = await db.posts.toArray(); //set the posts\n\n    setPosts(allPosts);\n  }; //submit\n\n\n  const getPostInfo = e => {\n    e.preventDefault();\n\n    if (postTitle !== \"\" && postContent !== \"\" && postFile !== \"\") {\n      let post = {\n        title: postTitle,\n        content: postContent\n      };\n      db.posts.add(post).then(async () => {\n        //retrieve all posts inside the database\n        let allPosts = await db.posts.toArray(); //set the posts\n\n        setPosts(allPosts);\n      });\n    }\n  };\n\n  useEffect(() => {\n    //get all posts from the database\n    const getPosts = async () => {\n      let allPosts = await db.posts.toArray();\n      setPosts(allPosts);\n    };\n\n    getPosts();\n  }, []);\n  let postData;\n\n  if (posts.length > 0) {\n    postData = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postsContainer\",\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => deletePost(post.title),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, post.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  } else {\n    postData = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no posts to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getPostInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"content\",\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), postData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"EovFZ0oNCHIIB2I01RafMb6uX10=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/bella/Documents/github/Rezeptbuch/rezeptbuch/src/components/addNewRecipe/AddRecipe.js"],"names":["React","useState","useEffect","Dexie","Main","db","version","stores","posts","open","catch","err","console","log","stack","postTitle","setTitle","postContent","setContent","setPosts","deletePost","id","delete","allPosts","toArray","getPostInfo","e","preventDefault","postFile","post","title","content","add","then","getPosts","postData","length","map","target","value"],"mappings":"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","sourcesContent":["// import Header from '../header/Header.js'\n\nimport React, { useState, useEffect } from \"react\";\nimport Dexie from \"dexie\";\n\nconst Main = () => {\n  //set the database\n  const db = new Dexie(\"ReactDexie\");\n  //create the database store\n  db.version(1).stores({\n    posts: \"title, content, file\"\n  });\n  db.open().catch(err => {\n    console.log(err.stack || err);\n  });\n\n  //set the state and property\n  const [postTitle, setTitle] = useState(\"\");\n  const [postContent, setContent] = useState(\"\");\n  //   const [postFile, setFile] = useState(\"\");\n  const [posts, setPosts] = useState(\"\");\n\n  //read the file and decode it\n  //   const getFile = e => {\n  //     console.log(e);\n\n  //     let reader = new FileReader();\n  //     reader.readAsDataURL(e[0]);\n  //     reader.onload = e => {\n  //       setFile(reader.result);\n  //     };\n  //   };\n\n  const deletePost = async id => {\n    console.log(id);\n    db.posts.delete(id);\n    let allPosts = await db.posts.toArray();\n    //set the posts\n    setPosts(allPosts);\n  };\n\n  //submit\n  const getPostInfo = e => {\n    e.preventDefault();\n    if (postTitle !== \"\" && postContent !== \"\" && postFile !== \"\") {\n      let post = {\n        title: postTitle,\n        content: postContent\n      };\n\n      db.posts.add(post).then(async () => {\n        //retrieve all posts inside the database\n        let allPosts = await db.posts.toArray();\n        //set the posts\n        setPosts(allPosts);\n      });\n    }\n  };\n\n  useEffect(() => {\n    //get all posts from the database\n    const getPosts = async () => {\n      let allPosts = await db.posts.toArray();\n      setPosts(allPosts);\n    };\n    getPosts();\n  }, []);\n\n  let postData;\n\n  if (posts.length > 0) {\n    postData = (\n      <div className=\"postsContainer\">\n        {posts.map(post => {\n          return (\n            <div className=\"post\" key={post.title}>\n              <h2>{post.title}</h2>\n              <p>{post.content}</p>\n              <button className=\"delete\" onClick={() => deletePost(post.title)}>\n                Delete\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    postData = (\n      <div className=\"message\">\n        <p>There are no posts to show</p>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <form onSubmit={getPostInfo}>\n        <div className=\"control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            onChange={e => setTitle(e.target.value)}\n          />\n        </div>\n        <div className=\"control\">\n          <label>Content</label>\n          <textarea name=\"content\" onChange={e => setContent(e.target.value)} />\n        </div>\n        {/* <div className=\"control\">\n          <label htmlFor=\"cover\" className=\"cover\">\n            Choose a file\n          </label>\n          <input\n            type=\"file\"\n            id=\"cover\"\n            name=\"file\"\n            onChange={e => getFile(e.target.files)}\n          />\n        </div> */}\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      {postData}\n    </React.Fragment>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}