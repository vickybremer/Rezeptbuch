{"ast":null,"code":"var _jsxFileName = \"/Users/bella/Documents/github/Rezeptbuch/rezeptbuch/src/components/addNewRecipe/AddRecipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Dexie from \"dexie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  //set the database\n  const db = new Dexie(\"ReactDexie\"); //create the database store\n\n  db.version(1).stores({\n    posts: \"title, content, file\"\n  });\n  db.open().catch(error => {\n    console.log(\"An error ocurred:\" + error);\n  }); //set the state and property\n\n  const [postTitle, setTitle] = useState(\"\");\n  const [postContent, setContent] = useState(\"\"); //   const [postFile, setFile] = useState(\"\");\n\n  const [posts, setPosts] = useState(\"\"); //submit\n\n  const getPostInfo = event => {\n    event.preventDefault();\n\n    if (postTitle !== \"\" && postContent !== \"\") {\n      let post = {\n        title: postTitle,\n        content: postContent\n      };\n      db.posts.add(post).then(async () => {\n        //retrieve all posts inside the database\n        let allPosts = await db.posts.toArray(); //set the posts\n\n        setPosts(allPosts);\n      });\n    }\n  };\n\n  useEffect(() => {\n    //get all posts from the database\n    const getPosts = async () => {\n      let allPosts = await db.posts.toArray();\n      setPosts(allPosts);\n    };\n\n    getPosts();\n  }, []);\n\n  const deletePost = async id => {\n    console.log(id);\n    db.posts.delete(id);\n    let allPosts = await db.posts.toArray(); //set the posts\n\n    setPosts(allPosts);\n  };\n\n  let postData;\n\n  if (posts.length > 0) {\n    postData = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postsContainer\",\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => deletePost(post.title),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, post.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  } else {\n    postData = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no posts to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getPostInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          onChange: event => setTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"content\",\n          onChange: event => setContent(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), postData]\n  }, void 0, true);\n}\n\n_s(Main, \"EovFZ0oNCHIIB2I01RafMb6uX10=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/bella/Documents/github/Rezeptbuch/rezeptbuch/src/components/addNewRecipe/AddRecipe.js"],"names":["React","useState","useEffect","Dexie","Main","db","version","stores","posts","open","catch","error","console","log","postTitle","setTitle","postContent","setContent","setPosts","getPostInfo","event","preventDefault","post","title","content","add","then","allPosts","toArray","getPosts","deletePost","id","delete","postData","length","map","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Dexie from \"dexie\";\n\nexport default function Main() {\n  //set the database\n  const db = new Dexie(\"ReactDexie\");\n  //create the database store\n  db.version(1).stores({\n    posts: \"title, content, file\"\n  });\n  db.open().catch(error => {\n    console.log(\"An error ocurred:\" + error);\n  });\n\n  //set the state and property\n  const [postTitle, setTitle] = useState(\"\");\n  const [postContent, setContent] = useState(\"\");\n  //   const [postFile, setFile] = useState(\"\");\n  const [posts, setPosts] = useState(\"\");\n\n  //submit\n  const getPostInfo = event => {\n    event.preventDefault();\n    if (postTitle !== \"\" && postContent !== \"\") {\n      let post = {\n        title: postTitle,\n        content: postContent\n      };\n\n      db.posts.add(post).then(async () => {\n        //retrieve all posts inside the database\n        let allPosts = await db.posts.toArray();\n        //set the posts\n        setPosts(allPosts);\n      });\n    }\n  };\n\n  useEffect(() => {\n    //get all posts from the database\n    const getPosts = async () => {\n      let allPosts = await db.posts.toArray();\n      setPosts(allPosts);\n    };\n    getPosts();\n  }, []);\n\n  const deletePost = async id => {\n    console.log(id);\n    db.posts.delete(id);\n    let allPosts = await db.posts.toArray();\n    //set the posts\n    setPosts(allPosts);\n  };\n\n  let postData;\n\n  if (posts.length > 0) {\n    postData = (\n      <div className=\"postsContainer\">\n        {posts.map(post => {\n          return (\n            <div className=\"post\" key={post.title}>\n              <h2>{post.title}</h2>\n              <p>{post.content}</p>\n              <button className=\"delete\" onClick={() => deletePost(post.title)}>\n                Delete\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    postData = (\n      <div className=\"message\">\n        <p>There are no posts to show</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <form onSubmit={getPostInfo}>\n        <div className=\"control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            onChange={event => setTitle(event.target.value)}\n          />\n        </div>\n        <div className=\"control\">\n          <label>Content</label>\n          <textarea\n            name=\"content\"\n            onChange={event => setContent(event.target.value)}\n          />\n        </div>\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      {postData}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}