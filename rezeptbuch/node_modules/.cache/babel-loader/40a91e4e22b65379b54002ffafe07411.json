{"ast":null,"code":"var _jsxFileName = \"/Users/bella/Documents/github/Rezeptbuch/rezeptbuch/src/components/addNewRecipe/AddRecipe.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"../header/Header.js\";\nimport Dexie from \"dexie\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddRecipe() {\n  _s();\n\n  //Datenbank erstellen\n  const db = new Dexie(\"RecipeDatabase\"); //Version und Tabelle definieren\n\n  db.version(1).stores({\n    recipes: \"title, ingredients, steps, date\"\n  }); //Öffnen und auf Fehler prüfen\n\n  db.open().catch(error => {\n    console.log(\"error:\" + error);\n  }); //useStates definieren\n\n  const [addTitle, setAddTitle] = useState(\"\");\n  const [addIngredients, setAddIngredients] = useState(\"\");\n  const [addSteps, setAddSteps] = useState(\"\");\n  const [addDate, setAddDate] = useState(\"\");\n  const [recipes, setRecipes] = useState(\"\"); //Löschen\n\n  const deleteRecipe = async id => {\n    console.log(id);\n    db.recipes.delete(id);\n    let allRecipes = await db.recipes.toArray();\n    setRecipes(allRecipes);\n  }; //Abschicken der eingegebenen Daten\n\n\n  const getRecipeData = event => {\n    event.preventDefault();\n\n    if (addTitle !== \"\" && addIngredients !== \"\" && addSteps !== \"\" && addDate !== \"\") {\n      let add = {\n        title: addTitle,\n        ingredients: addIngredients,\n        steps: addSteps,\n        date: addDate\n      };\n      db.recipes.add(add).then(async () => {\n        //Ruft alle Rezepte aus der Datenbank ab\n        let allRecipes = await db.recipes.toArray(); //Erstellt alle Rezepte\n\n        setRecipes(allRecipes);\n      });\n    }\n  }; //Erhält alle Rezepte aus der Datenbank\n\n\n  useEffect(() => {\n    const getRecipes = async () => {\n      let allRecipes = await db.recipes.toArray();\n      setRecipes(allRecipes);\n    };\n\n    getRecipes();\n  }, []);\n  let submitData;\n\n  if (recipes.length > 0) {\n    submitData = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipesContainer\",\n      children: recipes.map(recipe => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: recipe.ingredients\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: recipe.steps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: recipe.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => deleteRecipe(recipe.title),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, recipe.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  } else {\n    submitData = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msg\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"no recipes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Add new Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getRecipeData,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => setAddTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: event => setAddIngredients(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Steps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: event => setAddSteps(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => setAddDate(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), submitData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddRecipe, \"5wsDSohChhnQg3ibo3P33mF8obE=\");\n\n_c = AddRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"sources":["/Users/bella/Documents/github/Rezeptbuch/rezeptbuch/src/components/addNewRecipe/AddRecipe.js"],"names":["Header","Dexie","React","useState","useEffect","AddRecipe","db","version","stores","recipes","open","catch","error","console","log","addTitle","setAddTitle","addIngredients","setAddIngredients","addSteps","setAddSteps","addDate","setAddDate","setRecipes","deleteRecipe","id","delete","allRecipes","toArray","getRecipeData","event","preventDefault","add","title","ingredients","steps","date","then","getRecipes","submitData","length","map","recipe","target","value"],"mappings":"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","sourcesContent":["import Header from \"../header/Header.js\";\nimport Dexie from \"dexie\";\nimport React, { useState, useEffect } from \"react\";\n\nexport default function AddRecipe() {\n  //Datenbank erstellen\n  const db = new Dexie(\"RecipeDatabase\");\n  //Version und Tabelle definieren\n  db.version(1).stores({\n    recipes: \"title, ingredients, steps, date\"\n  });\n  //Öffnen und auf Fehler prüfen\n  db.open().catch(error => {\n    console.log(\"error:\" + error);\n  });\n\n  //useStates definieren\n  const [addTitle, setAddTitle] = useState(\"\");\n  const [addIngredients, setAddIngredients] = useState(\"\");\n  const [addSteps, setAddSteps] = useState(\"\");\n  const [addDate, setAddDate] = useState(\"\");\n  const [recipes, setRecipes] = useState(\"\");\n\n  //Löschen\n  const deleteRecipe = async id => {\n    console.log(id);\n    db.recipes.delete(id);\n    let allRecipes = await db.recipes.toArray();\n    setRecipes(allRecipes);\n  };\n\n  //Abschicken der eingegebenen Daten\n  const getRecipeData = event => {\n    event.preventDefault();\n    if (\n      addTitle !== \"\" &&\n      addIngredients !== \"\" &&\n      addSteps !== \"\" &&\n      addDate !== \"\"\n    ) {\n      let add = {\n        title: addTitle,\n        ingredients: addIngredients,\n        steps: addSteps,\n        date: addDate\n      };\n      db.recipes.add(add).then(async () => {\n        //Ruft alle Rezepte aus der Datenbank ab\n        let allRecipes = await db.recipes.toArray();\n        //Erstellt alle Rezepte\n        setRecipes(allRecipes);\n      });\n    }\n  };\n\n  //Erhält alle Rezepte aus der Datenbank\n  useEffect(() => {\n    const getRecipes = async () => {\n      let allRecipes = await db.recipes.toArray();\n      setRecipes(allRecipes);\n    };\n    getRecipes();\n  }, []);\n\n  let submitData;\n\n  if (recipes.length > 0) {\n    submitData = (\n      <div className=\"recipesContainer\">\n        {recipes.map(recipe => {\n          return (\n            <div className=\"submit\" key={recipe.title}>\n              <h2>{recipe.title}</h2>\n              <h2>{recipe.ingredients}</h2>\n              <h2>{recipe.steps}</h2>\n              <h2>{recipe.date}</h2>\n              <button\n                className=\"delete\"\n                onClick={() => deleteRecipe(recipe.title)}\n              >\n                Delete\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    submitData = (\n      <div className=\"msg\">\n        <h2>no recipes.</h2>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Header title=\"Add new Recipe\" />\n\n      <form onSubmit={getRecipeData}>\n        <div className=\"control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            onChange={event => setAddTitle(event.target.value)}\n          ></input>\n        </div>\n        <div className=\"control\">\n          <label>Ingredients</label>\n          <textarea onChange={event => setAddIngredients(event.target.value)} />\n        </div>\n        <div className=\"control\">\n          <label>Steps</label>\n          <textarea onChange={event => setAddSteps(event.target.value)} />\n        </div>\n        <div className=\"control\">\n          <label>Date</label>\n          <input\n            type=\"text\"\n            onChange={event => setAddDate(event.target.value)}\n          ></input>\n        </div>\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      {submitData}\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}