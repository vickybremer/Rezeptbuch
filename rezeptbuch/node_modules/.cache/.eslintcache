[{"/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/index.js":"1","/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/reportWebVitals.js":"2","/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/app/App.js":"3","/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/recipes/Recipes.js":"4","/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/navigation/Navigation.js":"5","/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/randomizer/Randomizer.js":"6","/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/addNewRecipe/AddRecipe.js":"7","/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/randomizer/RandomizerButton.js":"8","/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/fullRecipe/fullRecipe.js":"9","/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/header/Header.js":"10"},{"size":518,"mtime":1643726295919,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1643716707569,"results":"13","hashOfConfig":"12"},{"size":793,"mtime":1643890296550,"results":"14","hashOfConfig":"12"},{"size":1118,"mtime":1644431475511,"results":"15","hashOfConfig":"12"},{"size":395,"mtime":1643890296552,"results":"16","hashOfConfig":"12"},{"size":232,"mtime":1644322960176,"results":"17","hashOfConfig":"12"},{"size":4901,"mtime":1644431018160,"results":"18","hashOfConfig":"12"},{"size":1160,"mtime":1644431650285,"results":"19","hashOfConfig":"12"},{"size":1017,"mtime":1644328427717,"results":"20","hashOfConfig":"12"},{"size":126,"mtime":1643726295917,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s3xo6f",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/index.js",[],[],"/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/reportWebVitals.js",[],[],"/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/app/App.js",[],[],"/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/recipes/Recipes.js",["56"],[],"import FullRecipe from \"../fullRecipe/fullRecipe.js\";\nimport { useState } from \"react\";\n// import recipeData from \"../recipeData/Recipe-data.json\";\nimport Header from \"../header/Header.js\";\nimport useLocalStorage from \"react-use-localstorage\";\n\nexport default function Recipes() {\n  console.log(\"This is a test for Recipe Function\");\n\n  const localData = JSON.parse(localStorage.getItem(\"recipes\"));\n\n  //zeigt, welches Rezept angezeigt wird/werden soll\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n\n  //Liste der Rezepttitel wird erstellt (sind Buttons)\n  const recipeList = localData.map(recipe => (\n    <li key={recipe.id}>\n      <button onClick={() => setSelectedRecipe(recipe.title)}>\n        {recipe.title}\n      </button>\n    </li>\n  ));\n  console.log(selectedRecipe);\n\n  //Liste wird aufgerufen\n  return (\n    <div>\n      <Header title=\"My Recipes\" />\n      <h3>{recipeList}</h3>\n      {selectedRecipe && (\n        <FullRecipe\n          listData={localData}\n          selectedRecipe={selectedRecipe}\n          closeHandler={() => setSelectedRecipe(null)}\n        />\n      )}\n    </div>\n  );\n}\n",["57","58"],"/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/navigation/Navigation.js",[],[],"/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/randomizer/Randomizer.js",[],[],"/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/addNewRecipe/AddRecipe.js",["59","60"],[],"import Header from \"../header/Header.js\";\nimport useLocalStorage from \"react-use-localstorage\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./AddRecipe.module.css\";\n\n\nexport default function AddRecipe() {\n    const [localRecipe, setLocalRecipe] = useLocalStorage(\"recipes\", {});\n\n    //Titel\n    const [addTitle, setAddTitle] = useState(\"\");\n\n    //Zutaten\n    const [addIngredients, setAddIngredients] = useState([]);\n    const [currentIngredient, setCurrentIngredient] = useState(\"\");\n\n    //Schritte\n    const [addSteps, setAddSteps] = useState([]);\n    const [currentStep, setCurrentStep] = useState(\"\");\n\n    //Datum\n    const [addDate, setAddDate] = useState(\"\");\n\n    //Liste mit allen neuen Rezepten\n    const [newRecipes, setNewRecipes] = useState([]);\n\n\n    //Alle gespeicherten Rezepte bei Reload noch da\n    useEffect(() => {\n        const savedRecipes = JSON.parse(localRecipe);\n        if (savedRecipes) {\n            setNewRecipes(savedRecipes);\n        }\n    }, []);\n\n    //Wird nur ausgeführt wenn neues Rezept dazu kommt\n    useEffect(() => {\n        const json = JSON.stringify(newRecipes);\n        setLocalRecipe(json);\n    }, [newRecipes]);\n\n    //Neues Rezept\n    const AddRecipe = event => {\n        event.preventDefault();\n        //Das neue Rezept, was hinzugefügt wird\n        const newRecipe = {\n            //   id: addId,\n            title: addTitle,\n            ingredients: addIngredients,\n            steps: addSteps,\n            date: addDate\n        };\n\n        //... = kurz für map Funktion\n        setNewRecipes([...newRecipes, newRecipe]);\n\n        //Daten werden gewiped\n        setAddTitle(\"\");\n        setAddIngredients(\"\");\n        setAddSteps(\"\");\n        setAddDate(\"\");\n    };\n\n    //Neue Zutat\n    const AddIngredient = event => {\n        event.preventDefault();\n\n        const newIngredient = currentIngredient;\n\n        //... = kurz für map Funktion\n        //alle Ingredients mappen, die schon drin sind\n        setAddIngredients([...addIngredients, newIngredient]);\n        setCurrentIngredient(\"\");\n    };\n\n    //Zutat löschen\n    // const DeleteIngredient = (id) => {\n    //     const filteredIngredients = [...newRecipes].filter((addIngredients) => addIngredients.id !== id);\n    //     setAddIngredients(filteredIngredients);\n    // }\n\n    //Neuer Schritt\n    const AddStep = event => {\n        event.preventDefault();\n\n        const newStep = currentStep;\n\n        //... = kurz für map Funktion\n        //alle Ingredients mappen, die schon drin sind\n        setAddSteps([...addSteps, newStep]);\n        setCurrentStep(\"\");\n    };\n\n    //Schritt löschen\n    // const DeleteStep = (id) => {\n    //     const filteredSteps = [...newRecipes].filter((addSteps) => addSteps.id !== id);\n    //     setAddSteps(filteredSteps);\n    // }\n\n    return (\n        <>\n            <Header title=\"Add new Recipe\" />\n            <div>\n                <form onSubmit={AddRecipe}>\n                    <h3>Title</h3>\n                    <input\n                        onChange={event => setAddTitle(event.target.value)}\n                        value={addTitle}\n                    ></input>\n                    <br />\n                    <br />\n\n                    <h3>Ingredients</h3>\n                    {/* <h5>{addIngredients.map(item => (\n                        <div key={item}>{item}\n                            <button onClick={() => DeleteIngredient(addIngredients.id)}>delete</button>\n                        </div>\n                    ))}</h5> */}\n                    <h5>{addIngredients}</h5>\n                    <textarea\n                        onChange={event => setCurrentIngredient(event.target.value)}\n                        value={currentIngredient}\n                    ></textarea>\n                    <button onClick={AddIngredient}>+</button>\n                    <br />\n                    <br />\n\n                    <h3>Steps</h3>\n                    {/* <h5>{addSteps.map(item => (\n                        <div key={item}>{item}\n                             <button onClick={() => DeleteStep(addSteps.id)}>delete</button> \n                        </div>\n                    ))}</h5> */}\n                    <h5>{addSteps}</h5>\n                    <textarea\n                        onChange={event => setCurrentStep(event.target.value)}\n                        value={currentStep}\n                    ></textarea>\n                    <button onClick={AddStep}>+</button>\n                    <br />\n                    <br />\n\n                    <h3>Date</h3>\n                    <input\n                        onChange={event => setAddDate(event.target.value)}\n                        value={addDate}\n                    ></input>\n                    <br />\n                    <br />\n                    <button type=\"submit\"> submit recipe </button>\n                </form>\n            </div>\n        </>\n    );\n}\n\n\n","/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/randomizer/RandomizerButton.js",["61"],[],"// import recipeData from \"../recipeData/Recipe-data.json\";\nimport { useState } from \"react\";\nimport FullRecipe from \"../fullRecipe/fullRecipe.js\";\nimport useLocalStorage from \"react-use-localstorage\";\n\nexport default function RandomizerButton() {\n  const localData = JSON.parse(localStorage.getItem(\"recipes\"));\n\n  //Mit Conditional Rendering prüfen, ob schon was in current Recipe steht\n  //evtl. mit Conditional Rendering prüfen, dass die gleichen Rezepte nicht hintereinander\n  //geshufflet werden können.\n  const [currentRecipe, setCurrentRecipe] = useState(null);\n\n  //useEffect können wir nutzen, falls wir anfangs schon ein Rezept anzeigen möchten\n\n  function Randomize() {\n    const random = Math.floor(Math.random() * localData.length);\n    const RandomRecipe = localData[random].title;\n\n    console.log(RandomRecipe);\n\n    setCurrentRecipe(RandomRecipe);\n  }\n\n  return (\n    <div>\n      {currentRecipe && (\n        <FullRecipe\n          listData={localData}\n          selectedRecipe={currentRecipe}\n          closeHandler={() => setCurrentRecipe(null)}\n        />\n      )}\n      <button onClick={Randomize}> shuffle </button>\n    </div>\n  );\n}\n","/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/fullRecipe/fullRecipe.js",[],[],"/Users/victoriabremer/Desktop/GitHub/Rezeptbuch/rezeptbuch/src/components/header/Header.js",[],[],{"ruleId":"62","severity":1,"message":"63","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":23},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":34,"column":8,"nodeType":"72","endLine":34,"endColumn":10,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":40,"column":8,"nodeType":"72","endLine":40,"endColumn":20,"suggestions":"75"},{"ruleId":"62","severity":1,"message":"63","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":23},"no-unused-vars","'useLocalStorage' is defined but never used.","Identifier","unusedVar","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'localRecipe'. Either include it or remove the dependency array.","ArrayExpression",["78"],"React Hook useEffect has a missing dependency: 'setLocalRecipe'. Either include it or remove the dependency array.",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [localRecipe]",{"range":"84","text":"85"},"Update the dependencies array to be: [newRecipes, setLocalRecipe]",{"range":"86","text":"87"},[994,996],"[localRecipe]",[1163,1175],"[newRecipes, setLocalRecipe]"]